# Copyright 2023-2024, CS GROUP - France, https://www.csgroup.eu/
#
# This file is part of APIKeyManager project
#     https://github.com/csgroup-oss/apikey-manager/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Publish Docker images and helm charts

# Run workflow only for ...
on:
  push:
    tags:
      - "**" # new git tags (including hierarchical tags like v1.0/beta)
  workflow_dispatch: # manual trigger
    inputs:
      tag_version:
        description: "Version number to use (default: last git commit hash)"
        required: false

jobs:
  # Calculate variables for this workflow
  set-env:
    runs-on: ubuntu-latest
    name: "Set environment"
    outputs:
      tag_version: ${{ steps.set-env.outputs.tag_version }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-python
      - id: set-env
        name: "Set environment"
        run: |
          set -x

          # Try to get the version number from the user input of the manuel trigger
          tag_version=${{ github.event.inputs.tag_version }}

          # If not set
          if [[ -z "$tag_version" ]]; then

            # Deduce it automatically from the last git tag or commit hash
            rm -f app/_version.py
            # This creates the _version.py file with the version deduced by setuptools_scm
            pip install --root-user-action=ignore --no-cache-dir .
            # Read the version from this file
            tag_version=$(python -c "from app._version import __version__; print(__version__)")
          fi

          # Save value
          echo "tag_version=$tag_version" >> $GITHUB_OUTPUT

        shell: bash
