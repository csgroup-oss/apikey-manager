# Copyright 2023-2024, CS GROUP - France, https://www.csgroup.eu/
#
# This file is part of APIKeyManager project
#     https://github.com/csgroup-oss/apikey-manager/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- 
affinity: {}

config:
  # -- API root path
  root_path: ""
  # -- DEBUG mode (display SQL queries)
  debug: false
  # -- Allow CORS from (regexp)
  cors_origins_regex: ".*"
  # -- Allow CORS for methods
  cors_allow_methods: "GET"
  # -- Database to store API Keys
  database_url: "sqlite:///./test.db"
  # -- Default lifetime of an API Key (in hour)
  default_apikey_ttl_hour: 360 # 15 * 24
  # -- OIDC End Point
  oidc_endpoint: ""
  # -- OIDC Realm
  oidc_realm: ""
  # -- OIDC CLient ID
  oidc_client_id: ""
  # -- OIDC Secret used to sync user info from Keycloak
  oidc_client_secret: ""
  # -- Rate limiter configuration for the check apikey endpoint
  rate_limit: "20/minute"
  # -- Sync frequency of a user with data stored in Keycloak (in seconds)
  keycloak_sync_freq: 300
  # -- Show technical endoints (health)
  show_technical_endpoints: false

# -- 
fullnameOverride: ""

image:
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image repository
  repository: ghcr.io/csgroup-oss/apikey-manager
  # -- Image tag
  tag: 0.1.dev1.gecb8f64

imagePullSecrets:
  # -- Image pull secrets
- name: ghcr-k8s

ingress:
  annotations: {}
  className: ""
  # -- Enabled/Disable ingress
  enabled: false
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 8000
  type: ClusterIP
tolerations: []